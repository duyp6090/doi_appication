-- Create type enum users 
CREATE TYPE user_status AS ENUM('ACTIVE', 'INACTIVE', 'BANNED');

-- Create table tbl_user
CREATE TABLE tbl_user (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_by BIGINT,
    updated_by BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_name VARCHAR(50) UNIQUE,
    email VARCHAR(100) UNIQUE,
    phone VARCHAR(15) UNIQUE,
    password VARCHAR(255),
    birth_date DATE,
    status_user user_status DEFAULT 'ACTIVE'
);

-- Create table tbl_role
CREATE TABLE tbl_role (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_by BIGINT,
    updated_by BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    role_name VARCHAR(50) UNIQUE NOT NULL
);

-- Create table tbl_permission
CREATE TABLE tbl_permission (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_by BIGINT,
    updated_by BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    name VARCHAR(50) UNIQUE NOT NULL
);

-- Create table tbl_group
CREATE TABLE tbl_group (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_by BIGINT,
    updated_by BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    name VARCHAR(50) UNIQUE NOT NULL,
    description VARCHAR(255),
    role_id BIGINT NOT NULL   
);

-- Create foreign key for tbl_group
ALTER TABLE tbl_group
ADD CONSTRAINT fk_role
FOREIGN KEY (role_id) REFERENCES tbl_role(id) ON DELETE CASCADE;

-- Create table tbl_role_has_permission
CREATE TABLE tbl_role_has_permission (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_by BIGINT,
    updated_by BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    role_id BIGINT NOT NULL,
    permission_id BIGINT NOT NULL,
    FOREIGN KEY (role_id) REFERENCES tbl_role(id) ON DELETE CASCADE,
    FOREIGN KEY (permission_id) REFERENCES tbl_permission(id) ON DELETE CASCADE
);

-- Create table tbl_user_has_group
CREATE TABLE tbl_user_has_group (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_by BIGINT,
    updated_by BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_id BIGINT NOT NULL,
    group_id BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES tbl_user(id) ON DELETE CASCADE,
    FOREIGN KEY (group_id) REFERENCES tbl_group(id) ON DELETE CASCADE
);

-- Create table tbl_user_has_role
CREATE TABLE tbl_user_has_role (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_by BIGINT,
    updated_by BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_id BIGINT NOT NULL,
    role_id BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES tbl_user(id) ON DELETE CASCADE,
    FOREIGN KEY (role_id) REFERENCES tbl_role(id) ON DELETE CASCADE
);


-- Create table tbl_locations
CREATE TABLE tbl_locations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_by BIGINT,
    updated_by BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    name VARCHAR(100),
    province VARCHAR(100),
    ward VARCHAR(100),
    longitude DOUBLE precision,
    latitude DOUBLE precision
);

-- Create table tbl_cars
CREATE TABLE tbl_cars (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_by BIGINT,
    updated_by BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    owner_id BIGINT NOT NULL,
    brand VARCHAR(50) NOT NULL,
    model VARCHAR(50) NOT NULL,
    year INT NOT NULL,
    license_plate VARCHAR(20) UNIQUE NOT NULL,
    price_per_hour DECIMAL(10, 2) NOT NULL,
    location_id BIGINT,
    images JSONB,
    FOREIGN KEY (owner_id) REFERENCES tbl_user(id) ON DELETE CASCADE,
    FOREIGN KEY (location_id) REFERENCES tbl_locations(id) ON DELETE SET NULL
);

-- Create table tbl_bookings
CREATE TABLE tbl_bookings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_by BIGINT,
    updated_by BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    customer_id BIGINT NOT NULL,
    car_id BIGINT NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    total_price DECIMAL(10, 2) NOT NULL,
    status VARCHAR(50) DEFAULT 'PENDING',
    FOREIGN KEY (customer_id) REFERENCES tbl_user(id) ON DELETE CASCADE,
    FOREIGN KEY (car_id) REFERENCES tbl_cars(id) ON DELETE CASCADE
);

-- Create table tbl_reviews
CREATE TABLE tbl_reviews (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_by BIGINT,
    updated_by BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    booking_id BIGINT NOT NULL,
    rating INT CHECK (rating >= 1 AND rating <= 5),
    comment TEXT,
    FOREIGN KEY (booking_id) REFERENCES tbl_bookings(id) ON DELETE CASCADE
);

-- Create table tbl_token
CREATE TABLE tbl_token (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_by BIGINT,
    updated_by BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    access_token VARCHAR(500) NOT NULL,
    refresh_token VARCHAR(500) NOT NULL,
    user_name VARCHAR(50) NOT NULL
);

-- Create table tbl_otp
CREATE TABLE tbl_otp (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_by BIGINT,
    updated_by BIGINT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    email VARCHAR(50) NOT NULL,
    otp_code VARCHAR(10) NOT NULL,
    expired_at TIMESTAMP NOT NULL
);